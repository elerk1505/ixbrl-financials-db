name: Sync Yearly Company Metadata

on:
  workflow_dispatch:
    inputs:
      MAX_PER_RUN:
        description: "Limit how many new/stale companies to fetch this run (blank = unlimited)"
        required: false
        default: ""
      SINCE_DAYS:
        description: "Refresh rows older than N days (blank = only missing)"
        required: false
        default: ""
  schedule:
    - cron: "20 1 * * *"   # daily 01:20 UTC

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    env:
      CH_API_KEY: ${{ secrets.CH_API_KEY }}
      CONCURRENCY: "8"
      TIMEOUT: "20"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp

      - name: Run sync script
        env:
          # pass manual inputs (if provided) to the script flags
          MAX_PER_RUN: ${{ github.event.inputs.MAX_PER_RUN }}
          SINCE_DAYS: ${{ github.event.inputs.SINCE_DAYS }}
        run: |
          # make sure data dir exists
          mkdir -p data
          # run the script with flags derived from inputs
          EXTRA_FLAGS=""
          if [ -n "$MAX_PER_RUN" ]; then EXTRA_FLAGS="$EXTRA_FLAGS --max-per-run $MAX_PER_RUN"; fi
          if [ -n "$SINCE_DAYS" ]; then EXTRA_FLAGS="$EXTRA_FLAGS --since-days $SINCE_DAYS"; fi

          python sync_yearly_company_metadata.py --input-dir yearly_csvs_cleaned $EXTRA_FLAGS

      - name: Commit & push changes
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Auto-update yearly metadata" || echo "No changes"
          git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}
