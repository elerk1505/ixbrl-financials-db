name: Monthly iXBRL Financials Ingest → Azure SQL

on:
  workflow_dispatch:
    inputs:
      MONTHS:
        description: 'Comma-separated YYYY-MM list (e.g. 2024-01,2024-02). Leave blank to use SINCE_MONTHS.'
        required: false
        default: ''
      SINCE_MONTHS:
        description: 'If MONTHS is blank: ingest current month back N-1 months (default 1).'
        required: false
        default: '1'

permissions:
  id-token: write
  contents: read

concurrency:
  group: monthly-ixbrl-to-azure
  cancel-in-progress: false

jobs:
  ingest-monthlies:
    runs-on: ubuntu-latest
    timeout-minutes: 720
    env:
      # Python expects these:
      AZURE_SQL_SERVER:   ${{ secrets.AZURE_SQL_SERVER }}
      AZURE_SQL_DATABASE: ${{ secrets.AZURE_SQL_DATABASE }}
      AZURE_SQL_USERNAME: ${{ secrets.AZURE_SQL_USERNAME }}
      AZURE_SQL_PASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
      AZURE_SQL_ODBC:     ${{ secrets.AZURE_SQL_ODBC }}

      # For the script's month selection
      MONTHS:        ${{ github.event.inputs.MONTHS }}
      SINCE_MONTHS:  ${{ github.event.inputs.SINCE_MONTHS }}

      # Azure CLI (for firewall open/close)
      AZ_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZ_RG:           ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZ_SQL_NAME:     ${{ secrets.AZURE_SQL_SERVER_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      # OIDC login
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Open firewall to runner IP
      - name: Allow runner IP in Azure SQL firewall
        shell: bash
        run: |
          set -euo pipefail
          az account set --subscription "$AZ_SUBSCRIPTION"
          RUNNER_IP=$(curl -s https://api.ipify.org)
          echo "Runner public IP: $RUNNER_IP"
          RULE_NAME="gha-${{ github.run_id }}"
          az sql server firewall-rule create \
            --resource-group "$AZ_RG" \
            --server "$AZ_SQL_NAME" \
            --name "$RULE_NAME" \
            --start-ip-address "$RUNNER_IP" \
            --end-ip-address "$RUNNER_IP"
          echo "FW_RULE_NAME=$RULE_NAME" >> "$GITHUB_ENV"

      - name: Install system deps (ODBC)
        run: |
          sudo su -c 'curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -'
          sudo su -c 'curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list > /etc/apt/sources.list.d/mssql-release.list'
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install httpx pandas stream-read-xbrl sqlalchemy pyodbc

      - name: Connectivity check (optional)
        shell: bash
        run: |
          python - <<'PY'
          import os, pyodbc
          cs = ("Driver=ODBC Driver 18 for SQL Server;"
                f"Server=tcp:{os.getenv('AZURE_SQL_SERVER')},1433;"
                f"Database={os.getenv('AZURE_SQL_DATABASE')};"
                f"Uid={os.getenv('AZURE_SQL_USERNAME')};"
                f"Pwd={os.getenv('AZURE_SQL_PASSWORD')};"
                "Encrypt=yes;TrustServerCertificate=no;Connection Timeout=60;")
          print("Attempting test connection…")
          with pyodbc.connect(cs) as c:
              cur=c.cursor(); cur.execute("SELECT 1"); print("SELECT 1 ->", cur.fetchone()[0])
          print("Connectivity OK")
          PY

      - name: Run monthly ingest
        run: |
          python scripts/ingest_monthly_financials.py \
            --months "${MONTHS}" \
            --since-months "${SINCE_MONTHS}"

      # Always close firewall rule
      - name: Remove runner IP from firewall
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          az account set --subscription "$AZ_SUBSCRIPTION" || true
          az sql server firewall-rule delete \
            --resource-group "$AZ_RG" \
            --server "$AZ_SQL_NAME" \
            --name "$FW_RULE_NAME" || true
